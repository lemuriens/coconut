# INSTALLATION #################################################################
    # CONFIGURATION ################################################################
        default_config:
        http:
          use_x_forwarded_for: true
          trusted_proxies:
            - 172.30.33.0/24
        system_health:
        history:
        person:
        frontend:
          themes: !include_dir_merge_named themes
    # GOOGLE ###################################################################
        google_assistant:
          project_id: !secret google_assistant_project_id
          service_account: !include SERVICE_ACCOUNT.json
          expose_by_default: false
          report_state: true
          entity_config:
            light.light_ambilight:
              aliases:
                - ambilight
    # TTS ######################################################################
        tts:
          - platform: edge_tts
            language: fr-FR-HenriNeural
    # FILES ####################################################################
        homeassistant:
          media_dirs:
            media: /config/media
          customize: !include_dir_merge_named entities/customize/
        binary_sensor: !include_dir_merge_list entities/binary_sensor/
        input_datetime: !include_dir_merge_named entities/datetime/
        input_boolean: !include_dir_merge_named entities/boolean/
        input_select: !include_dir_merge_named entities/select/
        input_number: !include_dir_merge_named entities/number/
        input_text: !include_dir_merge_named entities/text/
        switch: !include_dir_merge_list entities/switch/
        sensor: !include_dir_merge_list entities/sensor/
        group: !include_dir_merge_named entities/group/
        automation: !include automations.yaml
    # DEPLOYEMENT ######################################################################
        shell_command:
          git_upload: | 
            git add .
            git commit -m "`date +'%Y-%m-%d %H:%M:%S'`: Nouvelle mise √† jour disponible üéâ"
            git push -u origin master    
            
2- COPY / PASTE /ENTITIES TO /CONFIG/ENTITIES
3- INSTALL TERMINAL ADDON
4- WITH TERMINAL CONNECT GIT AND DO (git init + git pull https://github.com/lemuriens/combava.git under /config folder)
5- INSTALL FILE EDITOR ADDON:
    CONFIG : ___________________________________________________________________
        dirsfirst: false
        enforce_basepath: true
        git: false
        ignore_pattern:
          - __pycache__
          - deps
          - tts*
          - zigbee*
          - SERVICE*
          - blueprints
          - custom_components
          - home-assistant*
          - .*
        ssh_keys: []
    ____________________________________________________________________________
6- INSTALL NODE-RED ADDON:
    CONFIG : ___________________________________________________________________
    credential_secret: "CHOOSE_YOURS"
    theme: midnight-red
    http_node:
      username: ""
      password: ""
    http_static:
      username: ""
      password: ""
    ssl: false
    certfile: fullchain.pem
    keyfile: privkey.pem
    system_packages: []
    npm_packages: []
    init_commands: []
    safe_mode: false
    INSTALL DEPENDENCIES UNDER NODE-RED:
        node-red-contrib-comfort
        
7- INSTALL HACS ADDON (need GITHUB ACCOUNT), INSTALL LOVELACE ADDONS (HTML Jinja2 Template card / mini-graph-card / Dark Theme Pack for Home Assistant)
8- INSTALL GITHUB ADDON (Star github.com/lemuriens/combava.git ON YOUR ACCOUNT)
9- RESTART HA
10- INSTALL DUCKDNS ADDON THEN, FIX IP ADDRESS FOR LOCAL HA AND MAKE HTTPS FOR EXTERNAL ACCESS
11- GIT PULL
12 - ZIGBEE2MQTT:
    zigbee2mqtt > parameters > home assistant integration : check "Home Assistant legacy entity attributes"
    zigbee2mqtt > advanced > last seen : ISO_8601_local"

EXEMPLE OF HOW TO CONFIGURE /homeassistant/home_configuration.yaml : ___
# CONFIGURATION ################################################################
# TTS VOICE ####################################################################
tts_voice: edge_tts_say (mandatory)

# SECURITY #####################################################################
security: (optional)
    linked_lights: (optional)
        - light.light_entrance
        
sensor.security_action: (optional)
    linked_class: security_panel (mandatory)
    code: ["1_single","2_single","3_single","4_single","5_single","6_single","7_single","8_double"] (mandatory)
    arming_time: 30 (optional, default 30)
     
# ZONE #########################################################################

zone.magasin_aldi: (optional)
    google_keep_list: "https://keep.google.com/u/0/#LIST/" (mandatory)

zone.magasin_petit_auchan: (optional)
    google_keep_list: "https://keep.google.com/u/0/#LIST/" (mandatory)

zone.carrefour_market: (optional)
    google_keep_list: "https://keep.google.com/u/0/#LIST/" (mandatory)

# TEMPERATURES #################################################################
# EXTERIOR TEMPERATURES ########################################################
sensor.0xa4c138efbeff5a69_temperature: (optional)
    linked_class: ext_temperature (mandatory)
    linked_area: exterior (mandatory)
    linked_entity: input_number.temp_ext (mandatory)
    alias: exterieure (optional)
  
# INTERIOR TEMPERATURES ########################################################
sensor.ble_temperature_582d34362a4d: (optional)
    linked_class: int_temperature (mandatory)
    linked_entity: input_number.temp_int_1 (mandatory)
    linked_area: salon (mandatory)
    alias: de la maison (optional)
  
# EXTERIOR HUMIDITIES ##########################################################
sensor.0xa4c138efbeff5a69_humidity: (optional)
    linked_class: ext_humidity (mandatory)
    linked_entity: input_number.humidity_ext (mandatory)
    linked_area: exterior (mandatory)
    alias: exterieure (optional)

# INTERIOR HUMIDITIES ##########################################################
sensor.ble_humidity_582d34362a4d: (optional)
    linked_class: int_humidity (mandatory)
    linked_entity: input_number.humidity_int_1 (mandatory)
    linked_area: salon (mandatory)
    alias: de la maison (optional)
        
# CONVECTORS ###################################################################
 convector_config:
     input_boolean.in_home_zone: Auto
     input_boolean.in_middle_zone: 17
     input_boolean.in_big_zone: 12
    
 switch.switch_chauffage_salon:
     linked_class: convector
     linked_area: salon
     schedule: 
         - "00:00": [16.5,false]
         - "08:00": [17,false]
         - "09:20": [18,true]
         - "18:00": [18.5,false]
         - "23:00": [16.5,false]
     alias: chauffage du salon
     
# ILLUMINANCE ##################################################################
sensor.ext_ill_illuminance_lux: (optional)
    linked_class: illuminance (mandatory)
    linked_area: exterior (mandatory)
    linked_entity: input_number.illuminance_light (mandatory)

# WINDOWS ######################################################################
binary_sensor.door_window_sensor_158d0003f41d3e: (optional)
    linked_class: window (mandatory)
    linked_area: salon (mandatory)
    security_entrance: true (mandatory)
    alias: du bureau (optional)

binary_sensor.door_window_sensor_158d00039fe5b9: (optional)
    linked_class: window (mandatory)
    linked_area: chambre_1 (mandatory)
    security_entrance: false (mandatory)
    alias: de la chambre (optional)

# COVERS #######################################################################
input_number.cover_salon: (optional)
    linkedWindow: binary_sensor.door_window_sensor_158d0003e841d6 (mandatory)
    linked_device: cover.volet_salon (mandatory)
    linked_class: cover (mandatory)
    linked_area: salon (mandatory)
    timeToAeration: 3.3 (mandatory)
    timeToOpen: 22.5 (mandatory)
    timeToClose: 22.5 (mandatory)
    morning_open_if: '{{ states("input_boolean.mode_canape") == "off" and global.cubes.salon.free_fall == false }}' (optional)
    alias: du salon (optional)
    
# MOTIONS ######################################################################
binary_sensor.door_window_sensor_158d0003d47e37: (optional)
    linked_class: motion (mandatory)
    linked_area: entree (mandatory)
    addNoMotionDelay: 180 (optional)
    invertedMotion: false (optional)
    security_entrance: true (optional)
    alias: capteur de l'entr√©e (optional)

binary_sensor.motion_sensor_158d00022b8f02: (optional)
    linked_class: motion (mandatory)
    linked_area: entree (mandatory)
    addNoMotionDelay: 0 (optional)
    invertedMotion: false (optional)
    security_entrance: false (optional)
    alias: d√©tecteur de l'entr√©e (optional)
  
# LIGHTS #######################################################################
#color: on, off, both
light.light_ambilight: (optional)
    parameters: { color_temp_range: [200,220], transition_range: [1,20], bright_range: [80,100], hs_saturation: 100, color: "both" } (mandatory for auto light)
    auto: { day_light: false, last_light: true, night_light: true } (mandatory for auto light)
    linked_class: light (mandatory)
    linked_area: salon (mandatory)
  
light.yeelight_color4_0x1c27d865: (optional)
    parameters: { color_temp_range: [200,220], transition_range: [1,20], bright_range: [80,100], hs_saturation: 100, color: "both" } (mandatory for auto light)
    auto: { day_light: false, last_light: true, night_light: true } (mandatory for auto light)
    linked_class: light (mandatory)
    linked_area: salon (mandatory)
    
# LIGHTS CONTROLLER ############################################################
google_assistant_lights_control:
(auto lock lights when an action is done by home assistant using voice, to unlock set brightness to 42)
    light.light_band_bureau
    light.light_table_cuisine

sensor.knob_bureau_1_action: (optional)
(available actions :
    # auto
    # auto_turn_on / auto_turn_off / auto_toggle
    # turn_on / turn_off / toggle
    # brightness_step_up / brightness_step_down / brightness_step_loop
    # color_temp_step_up / color_temp_step_down / color_temp_step_loop
    # color_step_up / color_step_down
    # saturation_step_up / saturation_step_down
)
    listen: (optional)
        - if: "action_type = tap_twice"
          then: "auto"
          for: [light.light_band_bureau,light.light_table_cuisine,light.light_cuisine,light.light_ambilight,light.light_salon]
        - if: "action_value = pos_val"
          then: "brightness_step_up"
          for: [light.light_band_bureau,light.light_table_cuisine,light.light_cuisine,light.light_ambilight]
        - if: "action_value = neg_val"
          then: "brightness_step_down"
          for: [light.light_band_bureau,light.light_table_cuisine,light.light_cuisine,light.light_ambilight]
        - if: "action_type = free_fall"
          then: "toggle"
          for: [light.light_band_bureau,light.light_table_cuisine,light.light_cuisine,light.light_ambilight]
        - if: "action_type = flip90"
          then: "color_step_loop"
          for: [light.light_band_bureau,light.light_table_cuisine,light.light_cuisine,light.light_ambilight]
        - if: "action_type = flip180"
          then: "color_temp_step_loop"
          for: [light.light_band_bureau,light.light_table_cuisine,light.light_cuisine,light.light_ambilight]
        - if: "action_type = shake_air"
          then: "toggle"
          transition: 2 (optional)
          for: [light.light_salon]
    linked_class: light_control (mandatory)
    
# SPEAKERS #####################################################################
media_player.google_home: (optional)
    linked_class: speaker (mandatory)
    linked_area: salon (mandatory)
    
# AMBIANCES ####################################################################    
ambiance_config: (mandatory)
    path: 
        start: https://storage.googleapis.com/relaxation-sounds/
        end: _3600.mp3
    # color: [hs,saturation,brightness]
    # variance: [0-360,0-100,0-100]
    ambiances_type:
        "Arret":
            ambiance: stop
        "Foret":
            ambiance: forest
            color: [85,50,50]
            variance: [20,49,49]
        "Riviere":
            ambiance: river
            color: [160,50,70]
            variance: [30,49,30]
        "Pluie":
            ambiance: rain
            color: [210,40,80]
            variance: [20,30,45]
        "Nuit":
            ambiance: country_night
            color: [240,90,90]
            variance: [20,10,10]
        "Orage":
            ambiance: thunderstorm
            color: [220,100,50]
            variance: [30,20,49]
        "Au coin du feu":
            ambiance: fireplace
            color: [30,70,90]
            variance: [10,30,45]
        "Ocean":
            ambiance: ocean
            color: [180,90,80]
            variance: [20,10,45]

input_select.ambiance_salon: (optional)
    linked_class: ambiance (mandatory)
    linked_area: salon (mandatory)
    linked_lights: (mandatory)
        - light.light_ambilight
        - light.light_cuisine
        - light.light_table_cuisine
    linked_speaker: media_player.google_home (mandatory)
    ambiance_volume_level: 0.65 (mandatory)

# CALENDAR #####################################################################
calendar.home: (optional)
    linked_class: calendar (mandatory)
    alias: FAMILY CALENDAR (optional)
    send_to: (optional)
      - Jhon
# if you want to launch something with the event calendar, put devices_control:"calendar_cleaner_on" in the calendar description and it will be launched
# of corse, "calendar_cleaner_on" need to exist in devices_control.

# PERSONS ######################################################################
# JHON ________________________________________________________________________
person.JHON: (optional)
    # LOCALISATION : IN APP HA compagnion ACTIVATE : BACKGROUND LOCALISATION (HIGH PRECISION)/ LOCALISATION ZONE
    mobile_app_name: mobile_app_ (optional)
    linked_class: person (mandatory)
    alarm_clock: [sensor.jhon_phone_next_alarm  or {1: "08:00", 2: "08:00", 3: "08:00", 4: "08:00", 5: "08:00", 6: "08:00", 7: "08:00"}] (optional)
    alarm_clock_actions: [["input_boolean.bedroom_cover","on"]] (optional)
    sport: sport.jhon (optional)
    name: JHON (mandatory)
  
# SPORT CONFIGURATION
sport.JHON: (optional)
    days_to_ojective: 35 (mandatory)
    objective_limits: (mandatory)
        run: [40 min, 40 min]
        bodybuilding: [30 min, 50 min]
    objective_conditions: ["70% run or pdd", "walk to run"] (optional)
    objective_translations: (optional)
        run: course √† pied
        bodybuilding: musculation
        pdd: Puy de d√¥me
        weight: se peser
    objective_calendar: (mandatory)
        run: { "1":false, "2":false, "3":true, "4":false, "5":true, "6":false, "7":false, "8":false, "9":false, "10":true, "11":true, "12":false, "13":false, "14":false }
        bodybuilding: { "1":true, "2":false, "3":true, "4":false, "5":true, "6":false, "7":false, "8":true, "9":false, "10":true, "11":false, "12":true, "13":false, "14":false }
        pdd: { "1":false, "2":false, "3":false, "4":true, "5":false, "6":false, "7":false, "8":false, "9":false, "10":false, "11":true, "12":false, "13":false, "14":false }
        #bodybuilding: {"pompes": [10,200], "abdos": [80,400], "squats":[40,200], "planche":[1 min,5 min]}
        weight: { "1":true, "2":false, "3":false, "4":false, "5":false, "6":false, "7":false, "8":true, "9":false, "10":false, "11":false, "12":false, "13":false, "14":false}
  
# IN HA COMPANION ACTIVATE : NEXT ALARM
sensor.jhon_phone_next_alarm: (optional)
    linked_class: next_alarm (mandatory)
  
# IN APP ACTIVATE : PHONE STATE
sensor.phone_phone_state: (optional)
    linked_class: phone_state (mandatory)

# REMOTE #######################################################################
input_boolean.vp_power: (optional)
    linked_class: remote (mandatory)
    linked_device: remote.remote_remote (mandatory)
    remote: (mandatory)
        "on": (optional)
          num_repeats: 1 (optional, default 1)
          delay_secs: 0 (optional, default 0)
          commands: ["b64:JgCgAJiPFC4UDB"]
        "off": (optional)
          num_repeats: 3 (optional, default 1)
          delay_secs: 1.5 (optional, default 0)
          delay_between_commands: (optional, default 0)
          commands: ["b64:AAAA","b64:BBBB"]
    
input_number.hc_vol: (optional)
    linked_class: remote (mandatory)
    linked_device: remote.remote_remote (mandatory)
    remote: (mandatory)
        "increase": ["b64:JgCOABcOFjQWDhcOFzMWDxYzFzMWMxcOFzMWMxcOFzMWMxcOFw4WMhgOFw4XDhYPFg8WDxYzFg8WMxczFjQWMxczFjMXAASlE0UAASyQFg8WMxYPFg8WMxcOFjQWMxcyFw8WMxczFg8WMxY0Fg8WDxYzFg8WDxYPFg4XDhYPFjMXDhczFjQWMxYxGTMXMxYAD"] (mandatory)
        "decrease": ["b64:JgCQAAABKZIWDxU1FBEUEBU1FRAVNBY0FDUVEBQ2FDYUEBU1FDUWDxQ2FDUWDxQRFRAUERQRFBAUERUQFDUVNRQ2FDUUNhQ1FQAE/wABKZIVEBQ2FBEUERQ1FBEUNRU1FDYUERQ1FDYUEBU1FDYUEBU1FDYUEBUQFBEUERQRFBAVEBQRFDYUNRQ2FDUVNRQ2F"] (mandatory)
        
# CONTROL DEVICES ##############################################################
devices_controls: (optional)
################################################################################
    input_text.filmobot_status:
        - if: '{{ states("input_text.filmobot_status") == "bad_status_code" }}'
          then:
            notification: {"notification_id":"bad_status_code","message":"ü§ñ > Je rencontre un soucis humain !","send_mobile": true}
        - if: '{{ states("input_text.filmobot_status") != "bad_status_code" }}'
          then:
            notification: {"notification_id":"{{as_timestamp(now(),default)|int}}","message":"ü§ñ > Nouveau film: {{states('input_text.filmobot_status')}}", "data": {"sticky":true, "clickAction":"https://www.google.fr/search?q={{states('input_text.filmobot_status')}}"},"send_mobile":true}
################################################################################
    sensor.washing_machine_end_time:
        - if: '{{ states("sensor.washing_machine_end_time") == "unknown" and states("input_boolean.lave_linge") == "on" }}'
          then:
            notification: {"notification_id":"washing_machine","message":"Lave-linge: Vous pouvez enlever vos v√™tements üßº üëï ü´ß","speak":"Vous pouvez maintenant enlever vos v√™tements du lave linge","send_mobile":true}
            input_boolean.lave_linge: off
    binary_sensor.washing_machine_remote_control:
        - if: '{{ states("binary_sensor.washing_machine_remote_control") == "on" }}'
          then:
            - input_boolean.lave_linge: on
    input_boolean.lave_linge:
        - if: '{{ states("input_boolean.lave_linge") == "on" }}'
          then: 
            'wait {{ states("binary_sensor.washing_machine_remote_control") == "on" }} for 600':
              action: 
                {"payload":{"domain":"hon","service":"start_program","target":{"device_id":["e1db1a684ed95a6f5a6ee"]},"data":{"program":"hqd_smart","parameters":"{}"}}}
              timeout:
################################################################################
    sensor.dish_washer_end_time:
        - if: '{{ states("sensor.dish_washer_end_time") == "unknown" and states("input_boolean.lave_vaisselle") == "on" }}'
          then:
            notification: {"notification_id":"dish_washing_machine","message":"Lave-vaisselle: Vous pouvez enlever votre vaisselle üßº üçΩ Ô∏èü´ßÔ∏è","speak":"Vous pouvez maintenant enlever votre vaisselle","send_mobile":true}
            input_boolean.lave_vaisselle: off
    binary_sensor.dish_washer_status:
        - if: '{{ states("binary_sensor.dish_washer_status") == "on" and states("input_boolean.lave_vaisselle") == "off" }}'
          then:
            input_boolean.lave_vaisselle: on
    input_boolean.lave_vaisselle:
        - if: '{{ states("input_boolean.lave_vaisselle") == "on" }}'
          then:
            'wait {{ states("binary_sensor.dish_washer_remote_control") == "on" }} for 600':
              action: 
                {"payload":{"domain":"hon","service":"start_program","target":{"device_id":["bdcf99d82f8d649092"]},"data":{"program":"iot_voice_eco","parameters":'{"openDoor":1,"extraDry":1,"halfLoad":0,"lightStatus":0}'}}}
              timeout:
################################################################################
    select.knob_bureau_1_operation_mode:
        - if: '{{ states("select.knob_bureau_1_operation_mode") == "event" }}'
          then:
            input_boolean.volet_salon: toggle
            input_boolean.volet_bureau: toggle
            select.knob_bureau_1_operation_mode: command
    select.knob_bureau_2_operation_mode:
        - if: '{{ states("select.knob_bureau_2_operation_mode") == "event" }}'
          then:
            input_boolean.volet_salon: toggle
            input_boolean.volet_bureau: toggle
            select.knob_bureau_2_operation_mode: command
################################################################################
    binary_sensor.motion_chambre_1_presence:
        - if: '{{ states("binary_sensor.motion_chambre_1_presence") == "off" and states("sensor.motion_chambre_1_illuminance")|float >= 250}}'
          then:
            'wait {{ states("binary_sensor.motion_chambre_1_presence") == "on" }} for 120':
              action:
              timeout:
                emulate.sensor.switch_chambre_1_action: {"linked_class":"light_control","new_state":"hold"}